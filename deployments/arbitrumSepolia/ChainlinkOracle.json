{
  "address": "0xda6b4597e9590098dE01197e958a8C639687682A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sequencerOracle_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeout_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gracePeriod_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidGracePeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTimeout",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LengthMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newFallbackOracle",
          "type": "address"
        }
      ],
      "name": "SetFallbackOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "feeds",
          "type": "address[]"
        }
      ],
      "name": "SetFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newGracePeriod",
          "type": "uint256"
        }
      ],
      "name": "SetGracePeriod",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSequencerOracle",
          "type": "address"
        }
      ],
      "name": "SetSequencerOracle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTimeout",
          "type": "uint256"
        }
      ],
      "name": "SetTimeout",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fallbackOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "getAssetsPrices",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "prices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getFeeds",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gracePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSequencerValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sequencerOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newFallbackOracle",
          "type": "address"
        }
      ],
      "name": "setFallbackOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        },
        {
          "internalType": "address[][]",
          "name": "feeds",
          "type": "address[][]"
        }
      ],
      "name": "setFeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGracePeriod",
          "type": "uint256"
        }
      ],
      "name": "setGracePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSequencerOracle",
          "type": "address"
        }
      ],
      "name": "setSequencerOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newTimeout",
          "type": "uint256"
        }
      ],
      "name": "setTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x972207531e1b75dd3f1e8bbcbe4669ed8942f15501c4de6536fba158ee3c993f",
  "receipt": {
    "to": null,
    "from": "0x8381c90a455c162E0aCA3cBE80e7cE5D590C7703",
    "contractAddress": "0xda6b4597e9590098dE01197e958a8C639687682A",
    "transactionIndex": 1,
    "gasUsed": "1167879",
    "logsBloom": "0x
    "blockHash": "0x2d5b333211fbc46e1efcc1bc59fe41cadb9c72ead31ee50c74a051ef76737788",
    "transactionHash": "0x972207531e1b75dd3f1e8bbcbe4669ed8942f15501c4de6536fba158ee3c993f",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 101658528,
        "transactionHash": "0x972207531e1b75dd3f1e8bbcbe4669ed8942f15501c4de6536fba158ee3c993f",
        "address": "0xda6b4597e9590098dE01197e958a8C639687682A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008381c90a455c162e0aca3cbe80e7ce5d590c7703"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2d5b333211fbc46e1efcc1bc59fe41cadb9c72ead31ee50c74a051ef76737788"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 101658528,
        "transactionHash": "0x972207531e1b75dd3f1e8bbcbe4669ed8942f15501c4de6536fba158ee3c993f",
        "address": "0xda6b4597e9590098dE01197e958a8C639687682A",
        "topics": [
          "0x73ae4ce26eec2f4ea96b861b67192be67911288f8eb274c2fa6630e8deefab8e",
          "0x0000000000000000000000008b0f27adf87e037b53ef1aadb96be629be37cea8"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x2d5b333211fbc46e1efcc1bc59fe41cadb9c72ead31ee50c74a051ef76737788"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 101658528,
        "transactionHash": "0x972207531e1b75dd3f1e8bbcbe4669ed8942f15501c4de6536fba158ee3c993f",
        "address": "0xda6b4597e9590098dE01197e958a8C639687682A",
        "topics": [
          "0x9a3851f0de50087a4045a25c045b5b3db04b32773b44996506ff6dca26c783af"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000015180",
        "logIndex": 2,
        "blockHash": "0x2d5b333211fbc46e1efcc1bc59fe41cadb9c72ead31ee50c74a051ef76737788"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 101658528,
        "transactionHash": "0x972207531e1b75dd3f1e8bbcbe4669ed8942f15501c4de6536fba158ee3c993f",
        "address": "0xda6b4597e9590098dE01197e958a8C639687682A",
        "topics": [
          "0x848ba7852320e491d84ddc22f1f12fe48672aa22757fc4452703c9046d9982d7"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000e10",
        "logIndex": 3,
        "blockHash": "0x2d5b333211fbc46e1efcc1bc59fe41cadb9c72ead31ee50c74a051ef76737788"
      }
    ],
    "blockNumber": 101658528,
    "cumulativeGasUsed": "1167879",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8B0f27aDf87E037B53eF1AADB96bE629Be37CeA8",
    86400,
    3600,
    "0x8381c90a455c162E0aCA3cBE80e7cE5D590C7703"
  ],
  "numDeployments": 1,
  "solcInputHash": "79e4972a50d3f8124dae78977c03276f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sequencerOracle_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeout_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gracePeriod_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidGracePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimeout\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFallbackOracle\",\"type\":\"address\"}],\"name\":\"SetFallbackOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"SetFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newGracePeriod\",\"type\":\"uint256\"}],\"name\":\"SetGracePeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSequencerOracle\",\"type\":\"address\"}],\"name\":\"SetSequencerOracle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTimeout\",\"type\":\"uint256\"}],\"name\":\"SetTimeout\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fallbackOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"getAssetsPrices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getFeeds\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gracePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSequencerValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sequencerOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFallbackOracle\",\"type\":\"address\"}],\"name\":\"setFallbackOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"feeds\",\"type\":\"address[][]\"}],\"name\":\"setFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGracePeriod\",\"type\":\"uint256\"}],\"name\":\"setGracePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSequencerOracle\",\"type\":\"address\"}],\"name\":\"setSequencerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimeout\",\"type\":\"uint256\"}],\"name\":\"setTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"decimals()\":{\"returns\":{\"_0\":\"The number of decimals.\"}},\"getAssetPrice(address)\":{\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The price of the asset.\"}},\"getAssetsPrices(address[])\":{\"params\":{\"assets\":\"The list of asset addresses.\"},\"returns\":{\"prices\":\"The list of prices for the specified assets.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decimals()\":{\"notice\":\"Retrieves the number of decimals used by the oracle.\"},\"getAssetPrice(address)\":{\"notice\":\"Retrieves the price of a specified asset.\"},\"getAssetsPrices(address[])\":{\"notice\":\"Retrieves the prices of a list of specified assets.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/oracle/ChainlinkOracle.sol\":\"ChainlinkOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Ownable} from \\\"./Ownable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\\n * old one. This can help prevent common mistakes, such as transfers of ownership to\\n * incorrect accounts, or to contracts that are unable to interact with the\\n * permission system.\\n *\\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\\n * can later be changed with {transferOwnership} and {acceptOwnership}.\\n *\\n * This module is used through inheritance. It will make available all functions\\n * from parent (Ownable).\\n */\\nabstract contract Ownable2Step is Ownable {\\n    address private _pendingOwner;\\n\\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\\n     * Can only be called by the current owner.\\n     *\\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\\n     */\\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\\n        _pendingOwner = newOwner;\\n        emit OwnershipTransferStarted(owner(), newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual override {\\n        delete _pendingOwner;\\n        super._transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev The new owner accepts the ownership transfer.\\n     */\\n    function acceptOwnership() public virtual {\\n        address sender = _msgSender();\\n        if (pendingOwner() != sender) {\\n            revert OwnableUnauthorizedAccount(sender);\\n        }\\n        _transferOwnership(sender);\\n    }\\n}\\n\",\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"src/external/chainlink/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x7ff8c1d6b6f7546cd29007e1b09d7d47d1efa3191c8e3024e1726da05bf57352\",\"license\":\"MIT\"},\"src/interfaces/IChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\nimport {IOracle} from \\\"./IOracle.sol\\\";\\n\\ninterface IChainlinkOracle is IOracle {\\n    error LengthMismatch();\\n    error InvalidTimeout();\\n    error InvalidGracePeriod();\\n\\n    event SetSequencerOracle(address indexed newSequencerOracle);\\n    event SetTimeout(uint256 newTimeout);\\n    event SetGracePeriod(uint256 newGracePeriod);\\n    event SetFallbackOracle(address indexed newFallbackOracle);\\n    event SetFeed(address indexed asset, address[] feeds);\\n\\n    function sequencerOracle() external view returns (address);\\n\\n    function timeout() external view returns (uint256);\\n\\n    function gracePeriod() external view returns (uint256);\\n\\n    function fallbackOracle() external view returns (address);\\n\\n    function getFeeds(address asset) external view returns (address[] memory);\\n\\n    function isSequencerValid() external view returns (bool);\\n\\n    function setFallbackOracle(address newFallbackOracle) external;\\n\\n    function setFeeds(address[] calldata assets, address[][] calldata feeds) external;\\n\\n    function setSequencerOracle(address newSequencerOracle) external;\\n\\n    function setTimeout(uint256 newTimeout) external;\\n\\n    function setGracePeriod(uint256 newGracePeriod) external;\\n}\\n\",\"keccak256\":\"0xb945e36ec46157ae81156cd1d90dee210d2f9152e51594bdbf1c5227cd7b464e\",\"license\":\"GPL-2.0-or-later\"},\"src/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n    /**\\n     * @notice Retrieves the number of decimals used by the oracle.\\n     * @return The number of decimals.\\n     */\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @notice Retrieves the price of a specified asset.\\n     * @param asset The address of the asset.\\n     * @return The price of the asset.\\n     */\\n    function getAssetPrice(address asset) external view returns (uint256);\\n\\n    /**\\n     * @notice Retrieves the prices of a list of specified assets.\\n     * @param assets The list of asset addresses.\\n     * @return The list of prices for the specified assets.\\n     */\\n    function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory);\\n}\\n\",\"keccak256\":\"0x4b76bce6031b418032a070a38263bb2144959794a714886efe166379d42e3cfa\",\"license\":\"GPL-2.0-or-later\"},\"src/oracle/ChainlinkOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity ^0.8.0;\\n\\nimport {Ownable, Ownable2Step} from \\\"@openzeppelin/contracts/access/Ownable2Step.sol\\\";\\n\\nimport {AggregatorV3Interface} from \\\"../external/chainlink/AggregatorV3Interface.sol\\\";\\nimport {IOracle} from \\\"../interfaces/IOracle.sol\\\";\\nimport {IChainlinkOracle} from \\\"../interfaces/IChainlinkOracle.sol\\\";\\n\\ncontract ChainlinkOracle is IChainlinkOracle, Ownable2Step {\\n    uint256 private constant _MAX_TIMEOUT = 1 days;\\n    uint256 private constant _MIN_TIMEOUT = 20 minutes;\\n    uint256 private constant _MAX_GRACE_PERIOD = 1 days;\\n    uint256 private constant _MIN_GRACE_PERIOD = 20 minutes;\\n\\n    uint256 public override timeout;\\n    address public override sequencerOracle;\\n    uint256 public override gracePeriod;\\n    address public override fallbackOracle;\\n    mapping(address => address[]) private _feeds;\\n\\n    constructor(address sequencerOracle_, uint256 timeout_, uint256 gracePeriod_, address initialOwner)\\n        Ownable(initialOwner)\\n    {\\n        _setSequencerOracle(sequencerOracle_);\\n        _setTimeout(timeout_);\\n        _setGracePeriod(gracePeriod_);\\n    }\\n\\n    function decimals() external pure returns (uint8) {\\n        return 8;\\n    }\\n\\n    function getFeeds(address asset) external view returns (address[] memory) {\\n        return _feeds[asset];\\n    }\\n\\n    function getAssetPrice(address asset) public view returns (uint256) {\\n        address[] memory feeds = _feeds[asset];\\n        if (feeds.length == 0) {\\n            return IOracle(fallbackOracle).getAssetPrice(asset);\\n        }\\n        uint256 price = 10 ** 8;\\n        for (uint256 i = 0; i < feeds.length; ++i) {\\n            try AggregatorV3Interface(feeds[i]).latestRoundData() returns (\\n                uint80 roundId, int256 answer, uint256, /* startedAt */ uint256 updatedAt, uint80 /* answeredInRound */\\n            ) {\\n                if (\\n                    roundId != 0 && answer >= 0 && updatedAt <= block.timestamp\\n                        && block.timestamp <= updatedAt + timeout && _isSequencerValid()\\n                ) {\\n                    uint256 feedDecimals = AggregatorV3Interface(feeds[i]).decimals();\\n                    price = price * uint256(answer) / 10 ** feedDecimals;\\n                    continue;\\n                }\\n            } catch {}\\n            return IOracle(fallbackOracle).getAssetPrice(asset);\\n        }\\n        return price;\\n    }\\n\\n    function getAssetsPrices(address[] memory assets) external view returns (uint256[] memory prices) {\\n        prices = new uint256[](assets.length);\\n        unchecked {\\n            for (uint256 i = 0; i < assets.length; ++i) {\\n                prices[i] = getAssetPrice(assets[i]);\\n            }\\n        }\\n    }\\n\\n    function isSequencerValid() external view returns (bool) {\\n        return _isSequencerValid();\\n    }\\n\\n    function setFallbackOracle(address newFallbackOracle) external onlyOwner {\\n        fallbackOracle = newFallbackOracle;\\n        emit SetFallbackOracle(newFallbackOracle);\\n    }\\n\\n    function setFeeds(address[] calldata assets, address[][] calldata feeds) external onlyOwner {\\n        if (assets.length != feeds.length) revert LengthMismatch();\\n\\n        for (uint256 i = 0; i < assets.length; ++i) {\\n            if (feeds[i].length == 0) revert LengthMismatch();\\n            address[] storage _f = _feeds[assets[i]];\\n            assembly {\\n                sstore(_f.slot, 0)\\n            }\\n            for (uint256 j = 0; j < feeds[i].length; ++j) {\\n                _f.push(feeds[i][j]);\\n            }\\n            emit SetFeed(assets[i], feeds[i]);\\n        }\\n    }\\n\\n    function setSequencerOracle(address newSequencerOracle) external onlyOwner {\\n        _setSequencerOracle(newSequencerOracle);\\n    }\\n\\n    function _setSequencerOracle(address newSequencerOracle) internal {\\n        sequencerOracle = newSequencerOracle;\\n        emit SetSequencerOracle(newSequencerOracle);\\n    }\\n\\n    function setTimeout(uint256 newTimeout) external onlyOwner {\\n        _setTimeout(newTimeout);\\n    }\\n\\n    function _setTimeout(uint256 newTimeout) internal {\\n        if (newTimeout < _MIN_TIMEOUT || newTimeout > _MAX_TIMEOUT) revert InvalidTimeout();\\n        timeout = newTimeout;\\n        emit SetTimeout(newTimeout);\\n    }\\n\\n    function setGracePeriod(uint256 newGracePeriod) external onlyOwner {\\n        _setGracePeriod(newGracePeriod);\\n    }\\n\\n    function _setGracePeriod(uint256 newGracePeriod) internal {\\n        if (newGracePeriod < _MIN_GRACE_PERIOD || newGracePeriod > _MAX_GRACE_PERIOD) revert InvalidGracePeriod();\\n        gracePeriod = newGracePeriod;\\n        emit SetGracePeriod(newGracePeriod);\\n    }\\n\\n    function _isSequencerValid() internal view returns (bool) {\\n        // @dev When the chain is L1, sequencerOracle is not set and always returns true.\\n        if (sequencerOracle == address(0)) {\\n            return true;\\n        }\\n        (, int256 answer,, uint256 updatedAt,) = AggregatorV3Interface(sequencerOracle).latestRoundData();\\n        return answer == 0 && block.timestamp - updatedAt > gracePeriod;\\n    }\\n}\\n\",\"keccak256\":\"0x0f4226d37a75d66c8257b853932da5fdeee04f4e0729f54db0025b2a67df9a35\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801562000010575f80fd5b50604051620014d0380380620014d0833981016040819052620000339162000241565b806001600160a01b0381166200006257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006d8162000099565b506200007984620000b7565b620000848362000100565b6200008f826200016e565b5050505062000289565b600180546001600160a01b0319169055620000b481620001d6565b50565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f73ae4ce26eec2f4ea96b861b67192be67911288f8eb274c2fa6630e8deefab8e905f90a250565b6104b08110806200011357506201518081115b156200013257604051631ffb86f160e21b815260040160405180910390fd5b60028190556040518181527f9a3851f0de50087a4045a25c045b5b3db04b32773b44996506ff6dca26c783af906020015b60405180910390a150565b6104b08110806200018157506201518081115b15620001a05760405163d7c43e0f60e01b815260040160405180910390fd5b60048190556040518181527f848ba7852320e491d84ddc22f1f12fe48672aa22757fc4452703c9046d9982d79060200162000163565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200023c575f80fd5b919050565b5f805f806080858703121562000255575f80fd5b620002608562000225565b935060208501519250604085015191506200027e6060860162000225565b905092959194509250565b61123980620002975f395ff3fe608060405234801561000f575f80fd5b5060043610610149575f3560e01c80639d23d9f2116100c7578063c58a34cc1161007d578063f0aef31c11610063578063f0aef31c14610296578063f2f65960146102a9578063f2fde38b146102bc575f80fd5b8063c58a34cc14610272578063e30c397814610285575f80fd5b8063ac77f572116100ad578063ac77f5721461022c578063acbb4c1e1461024c578063b3596f071461025f575f80fd5b80639d23d9f214610203578063a06db7dc14610223575f80fd5b8063715018a61161011c57806379ba50971161010257806379ba5097146101d85780638da5cb5b146101e05780638fadac78146101f0575f80fd5b8063715018a6146101b85780637194ed42146101c0575f80fd5b8063170aee731461014d578063313ce56714610162578063629838e51461017657806370dea79a146101a1575b5f80fd5b61016061015b366004610d2b565b6102cf565b005b604051600881526020015b60405180910390f35b600554610189906001600160a01b031681565b6040516001600160a01b03909116815260200161016d565b6101aa60025481565b60405190815260200161016d565b610160610320565b6101c8610333565b604051901515815260200161016d565b610160610341565b5f546001600160a01b0316610189565b6101606101fe366004610d8c565b61038a565b610216610211366004610e07565b6105ce565b60405161016d9190610ec7565b6101aa60045481565b61023f61023a366004610d2b565b61066e565b60405161016d9190610f0a565b600354610189906001600160a01b031681565b6101aa61026d366004610d2b565b6106e1565b610160610280366004610f4a565b6109d8565b6001546001600160a01b0316610189565b6101606102a4366004610d2b565b6109e9565b6101606102b7366004610f4a565b6109fa565b6101606102ca366004610d2b565b610a0b565b6102d7610a7b565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f9a248ffd42eb7f1580b27272ef0a5911b2835eb6fb9951d6fd1b6e3264b9e6e0905f90a250565b610328610a7b565b6103315f610aa7565b565b5f61033c610ac0565b905090565b60015433906001600160a01b0316811461037e5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61038781610aa7565b50565b610392610a7b565b8281146103cb576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5b838110156105c7578282828181106103e7576103e7610f61565b90506020028101906103f99190610f75565b90505f03610433576040517fff633a3800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60065f87878581811061044957610449610f61565b905060200201602081019061045e9190610d2b565b6001600160a01b03166001600160a01b031681526020019081526020015f2090505f81555f5b84848481811061049657610496610f61565b90506020028101906104a89190610f75565b905081101561053257818585858181106104c4576104c4610f61565b90506020028101906104d69190610f75565b838181106104e6576104e6610f61565b90506020020160208101906104fb9190610d2b565b8154600180820184555f93845260209093200180546001600160a01b0319166001600160a01b039290921691909117905501610484565b5085858381811061054557610545610f61565b905060200201602081019061055a9190610d2b565b6001600160a01b03167fcbf64f4858c251e8a5e4b58489643fd6e0255b237e6e022318293b7fc43bb4f885858581811061059657610596610f61565b90506020028101906105a89190610f75565b6040516105b6929190610fbb565b60405180910390a2506001016103cd565b5050505050565b6060815167ffffffffffffffff8111156105ea576105ea610df3565b604051908082528060200260200182016040528015610613578160200160208202803683370190505b5090505f5b82518110156106685761064383828151811061063657610636610f61565b60200260200101516106e1565b82828151811061065557610655610f61565b6020908102919091010152600101610618565b50919050565b6001600160a01b0381165f908152600660209081526040918290208054835181840281018401909452808452606093928301828280156106d557602002820191905f5260205f20905b81546001600160a01b031681526001909101906020018083116106b7575b50505050509050919050565b6001600160a01b0381165f9081526006602090815260408083208054825181850281018501909352808352849383018282801561074557602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610727575b5050505050905080515f036107c75760055460405163b3596f0760e01b81526001600160a01b0385811660048301529091169063b3596f0790602401602060405180830381865afa15801561079c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c09190611006565b9392505050565b6305f5e1005f5b82518110156109d0578281815181106107e9576107e9610f61565b60200260200101516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa92505050801561084a575060408051601f3d908101601f1916820190925261084791810190611036565b60015b156109535769ffffffffffffffffffff85161580159061086a57505f8412155b80156108765750428211155b801561088e575060025461088a9083611096565b4211155b801561089d575061089d610ac0565b1561094d575f8887815181106108b5576108b5610f61565b60200260200101516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091c91906110af565b60ff16905061092c81600a6111af565b610936868a6111ba565b61094091906111d1565b97505050505050506109c8565b50505050505b60055460405163b3596f0760e01b81526001600160a01b0387811660048301529091169063b3596f0790602401602060405180830381865afa15801561099b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bf9190611006565b95945050505050565b6001016107ce565b509392505050565b6109e0610a7b565b61038781610b75565b6109f1610a7b565b61038781610bfa565b610a02610a7b565b61038781610c43565b610a13610a7b565b600180546001600160a01b0383166001600160a01b03199091168117909155610a435f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f546001600160a01b031633146103315760405163118cdaa760e01b8152336004820152602401610375565b600180546001600160a01b031916905561038781610cc1565b6003545f906001600160a01b0316610ad85750600190565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610b2a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b4e9190611036565b50935050925050815f148015610b6e5750600454610b6c82426111f0565b115b9250505090565b6104b0811080610b8757506201518081115b15610bbe576040517f7fee1bc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028190556040518181527f9a3851f0de50087a4045a25c045b5b3db04b32773b44996506ff6dca26c783af906020015b60405180910390a150565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f73ae4ce26eec2f4ea96b861b67192be67911288f8eb274c2fa6630e8deefab8e905f90a250565b6104b0811080610c5557506201518081115b15610c8c576040517fd7c43e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048190556040518181527f848ba7852320e491d84ddc22f1f12fe48672aa22757fc4452703c9046d9982d790602001610bef565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610d26575f80fd5b919050565b5f60208284031215610d3b575f80fd5b6107c082610d10565b5f8083601f840112610d54575f80fd5b50813567ffffffffffffffff811115610d6b575f80fd5b6020830191508360208260051b8501011115610d85575f80fd5b9250929050565b5f805f8060408587031215610d9f575f80fd5b843567ffffffffffffffff80821115610db6575f80fd5b610dc288838901610d44565b90965094506020870135915080821115610dda575f80fd5b50610de787828801610d44565b95989497509550505050565b634e487b7160e01b5f52604160045260245ffd5b5f6020808385031215610e18575f80fd5b823567ffffffffffffffff80821115610e2f575f80fd5b818501915085601f830112610e42575f80fd5b813581811115610e5457610e54610df3565b8060051b604051601f19603f83011681018181108582111715610e7957610e79610df3565b604052918252848201925083810185019188831115610e96575f80fd5b938501935b82851015610ebb57610eac85610d10565b84529385019392850192610e9b565b98975050505050505050565b602080825282518282018190525f9190848201906040850190845b81811015610efe57835183529284019291840191600101610ee2565b50909695505050505050565b602080825282518282018190525f9190848201906040850190845b81811015610efe5783516001600160a01b031683529284019291840191600101610f25565b5f60208284031215610f5a575f80fd5b5035919050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112610f8a575f80fd5b83018035915067ffffffffffffffff821115610fa4575f80fd5b6020019150600581901b3603821315610d85575f80fd5b60208082528181018390525f908460408401835b86811015610ffb576001600160a01b03610fe884610d10565b1682529183019190830190600101610fcf565b509695505050505050565b5f60208284031215611016575f80fd5b5051919050565b805169ffffffffffffffffffff81168114610d26575f80fd5b5f805f805f60a0868803121561104a575f80fd5b6110538661101d565b94506020860151935060408601519250606086015191506110766080870161101d565b90509295509295909350565b634e487b7160e01b5f52601160045260245ffd5b808201808211156110a9576110a9611082565b92915050565b5f602082840312156110bf575f80fd5b815160ff811681146107c0575f80fd5b600181815b8085111561110957815f19048211156110ef576110ef611082565b808516156110fc57918102915b93841c93908002906110d4565b509250929050565b5f8261111f575060016110a9565b8161112b57505f6110a9565b8160018114611141576002811461114b57611167565b60019150506110a9565b60ff84111561115c5761115c611082565b50506001821b6110a9565b5060208310610133831016604e8410600b841016171561118a575081810a6110a9565b61119483836110cf565b805f19048211156111a7576111a7611082565b029392505050565b5f6107c08383611111565b80820281158282048414176110a9576110a9611082565b5f826111eb57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156110a9576110a961108256fea26469706673582212206e862dc70862cb6c88e1a7cda6000e79ac18d681ad89e4d084f772b8dd5963e364736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "The new owner accepts the ownership transfer."
      },
      "decimals()": {
        "returns": {
          "_0": "The number of decimals."
        }
      },
      "getAssetPrice(address)": {
        "params": {
          "asset": "The address of the asset."
        },
        "returns": {
          "_0": "The price of the asset."
        }
      },
      "getAssetsPrices(address[])": {
        "params": {
          "assets": "The list of asset addresses."
        },
        "returns": {
          "prices": "The list of prices for the specified assets."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingOwner()": {
        "details": "Returns the address of the pending owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "decimals()": {
        "notice": "Retrieves the number of decimals used by the oracle."
      },
      "getAssetPrice(address)": {
        "notice": "Retrieves the price of a specified asset."
      },
      "getAssetsPrices(address[])": {
        "notice": "Retrieves the prices of a list of specified assets."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 156,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 15061,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "timeout",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 15064,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "sequencerOracle",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 15067,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "gracePeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 15070,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "fallbackOracle",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 15075,
        "contract": "src/oracle/ChainlinkOracle.sol:ChainlinkOracle",
        "label": "_feeds",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}